package com.nhatnguyen.pojo;
// Generated Dec 4, 2016 9:17:20 PM by Hibernate Tools 3.6.0.Final

import java.io.Serializable;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * Account generated by hbm2java
 */
@Entity
@Table(name = "ACCOUNT")
public class Account implements Serializable {

	private String account;
	private String password;
	private String role;
	private Set<OutboxMessage> outboxMessagesForSendingAccount = new HashSet<OutboxMessage>(0);
	private Set<Message> messagesForReceivedAccount = new HashSet<Message>(0);
	private Set<OutboxMessage> outboxMessagesForReceivedAccount = new HashSet<OutboxMessage>(0);
	private Set<Message> messagesForSendingAccount = new HashSet<Message>(0);
	public Account(String account){
		this.account = account;
	}
	public Account() {
	}

	public Account(String account, String password, String role) {
		this.account = account;
		this.password = password;
		this.role = role;
	}

	public Account(String account, String password, String role, Set<OutboxMessage> outboxMessagesForSendingAccount,
			Set<Message> messagesForReceivedAccount, Set<OutboxMessage> outboxMessagesForReceivedAccount,
			Set<Message> messagesForSendingAccount) {
		this.account = account;
		this.password = password;
		this.role = role;
		this.outboxMessagesForSendingAccount = outboxMessagesForSendingAccount;
		this.messagesForReceivedAccount = messagesForReceivedAccount;
		this.outboxMessagesForReceivedAccount = outboxMessagesForReceivedAccount;
		this.messagesForSendingAccount = messagesForSendingAccount;
	}

	@Id

	@Column(name = "ACCOUNT", unique = true, nullable = false)
	public String getAccount() {
		return this.account;
	}

	public void setAccount(String account) {
		this.account = account;
	}

	@Column(name = "PASSWORD", nullable = false)
	public String getPassword() {
		return this.password;
	}

	public void setPassword(String password) {
		this.password = password;
	}

	@Column(name = "ROLE", nullable = false)
	public String getRole() {
		return this.role;
	}

	public void setRole(String role) {
		this.role = role;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "accountBySendingAccount")
	public Set<OutboxMessage> getOutboxMessagesForSendingAccount() {
		return this.outboxMessagesForSendingAccount;
	}

	public void setOutboxMessagesForSendingAccount(Set<OutboxMessage> outboxMessagesForSendingAccount) {
		this.outboxMessagesForSendingAccount = outboxMessagesForSendingAccount;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "accountByReceivedAccount")
	public Set<Message> getMessagesForReceivedAccount() {
		return this.messagesForReceivedAccount;
	}

	public void setMessagesForReceivedAccount(Set<Message> messagesForReceivedAccount) {
		this.messagesForReceivedAccount = messagesForReceivedAccount;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "accountByReceivedAccount")
	public Set<OutboxMessage> getOutboxMessagesForReceivedAccount() {
		return this.outboxMessagesForReceivedAccount;
	}

	public void setOutboxMessagesForReceivedAccount(Set<OutboxMessage> outboxMessagesForReceivedAccount) {
		this.outboxMessagesForReceivedAccount = outboxMessagesForReceivedAccount;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "accountBySendingAccount")
	public Set<Message> getMessagesForSendingAccount() {
		return this.messagesForSendingAccount;
	}

	public void setMessagesForSendingAccount(Set<Message> messagesForSendingAccount) {
		this.messagesForSendingAccount = messagesForSendingAccount;
	}

}

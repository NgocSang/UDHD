package com.nhatnguyen.pojo;
// Generated Dec 4, 2016 9:17:20 PM by Hibernate Tools 3.6.0.Final

import java.io.Serializable;
import java.util.Date;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * OutboxMessage generated by hbm2java
 */
@Entity
@Table(name = "OUTBOX_MESSAGE")
public class OutboxMessage implements Serializable {

	private int emailId;
	private Account accountByReceivedAccount;
	private Account accountBySendingAccount;
	private Date sendingDate;
	private String readingStatus;
	private String description;

	public OutboxMessage() {
	}

	public OutboxMessage(int emailId, Account accountByReceivedAccount, Account accountBySendingAccount,
			Date sendingDate, String readingStatus, String description) {
		this.emailId = emailId;
		this.accountByReceivedAccount = accountByReceivedAccount;
		this.accountBySendingAccount = accountBySendingAccount;
		this.sendingDate = sendingDate;
		this.readingStatus = readingStatus;
		this.description = description;
	}

	@Id

	@Column(name = "EMAIL_ID", unique = true, nullable = false)
	public int getEmailId() {
		return this.emailId;
	}

	public void setEmailId(int emailId) {
		this.emailId = emailId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "RECEIVED_ACCOUNT", nullable = false)
	public Account getAccountByReceivedAccount() {
		return this.accountByReceivedAccount;
	}

	public void setAccountByReceivedAccount(Account accountByReceivedAccount) {
		this.accountByReceivedAccount = accountByReceivedAccount;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "SENDING_ACCOUNT", nullable = false)
	public Account getAccountBySendingAccount() {
		return this.accountBySendingAccount;
	}

	public void setAccountBySendingAccount(Account accountBySendingAccount) {
		this.accountBySendingAccount = accountBySendingAccount;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "SENDING_DATE", nullable = false, length = 23)
	public Date getSendingDate() {
		return this.sendingDate;
	}

	public void setSendingDate(Date sendingDate) {
		this.sendingDate = sendingDate;
	}

	@Column(name = "READING_STATUS", nullable = false)
	public String getReadingStatus() {
		return this.readingStatus;
	}

	public void setReadingStatus(String readingStatus) {
		this.readingStatus = readingStatus;
	}

	@Column(name = "DESCRIPTION", nullable = false)
	public String getDescription() {
		return this.description;
	}

	public void setDescription(String description) {
		this.description = description;
	}

}
